name: Run nwss twice-hourly with two configs (15 / 45)

on:
  schedule:
    - cron: "15 * * * *"          # minute 15 → config-clean.json
    - cron: "45 * * * *"          # minute 45 → config-clean2.json
  workflow_dispatch:

permissions:
  contents: write                 # allow commit back to this repo

env:
  SCRIPT_REPO: ryanbr/network-scanner
  LIST_FILE:  easylist/easylist_adservers.txt
  CONFIG_A_GPG: config-clean.json.gpg
  CONFIG_B_GPG: config-clean2.json.gpg

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      SCHEDULE: ${{ github.event.schedule }}

    steps:
    # 1 – checkout this repo
    - uses: actions/checkout@v4

    # 2 – tools
    - uses: actions/setup-node@v4
      with: { node-version: 20 }
    - run: sudo apt-get update && sudo apt-get install -y gnupg

    # 3 – clone nwss
    - name: Fetch nwss
      run: |
        echo "::notice::Cloning https://github.com/${SCRIPT_REPO}.git"
        git clone --depth 1 "https://github.com/${SCRIPT_REPO}.git" nwss
        cd nwss
        if [ -f package.json ]; then
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci    --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi
        fi

    # 4 – decrypt correct config & run nwss.js
    - name: Decrypt config and run nwss.js
      env:
        PASSPHRASE_A: ${{ secrets.CONFIG_CLEAN_PASSPHRASE }}
        PASSPHRASE_B: ${{ secrets.CONFIG_CLEAN2_PASSPHRASE }}
      run: |
        # decide which encrypted file / passphrase to use
        if [ "$SCHEDULE" = "15 * * * *" ]; then
          CONFIG_GPG="${CONFIG_A_GPG}"
          PASSPHRASE="$PASSPHRASE_A"
        else
          CONFIG_GPG="${CONFIG_B_GPG}"
          PASSPHRASE="$PASSPHRASE_B"
        fi

        # copy .gpg into nwss folder & decrypt
        cp "$CONFIG_GPG" nwss/
        cd nwss
        JSON_FILE="$(basename "$CONFIG_GPG" .gpg)"   # e.g. config-clean.json

        echo "$PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 \
          --output "$JSON_FILE" --decrypt "$(basename "$CONFIG_GPG")"

        echo "::notice::Running nwss with $JSON_FILE"
        node nwss.js \
          --clean-rules --remove-tempfiles \
          --remove-dubes --custom-json "$JSON_FILE" \
          -o eztvoutput

        # sanity-check size
        BYTES=$(stat -c%s eztvoutput)
        if [ "$BYTES" -lt 10 ] || [ "$BYTES" -gt 10000 ]; then
          echo "::error::eztvoutput size $BYTES bytes out of range"; exit 1; fi

        cp eztvoutput ../nwss-output.txt

    # 5 – merge & sort
    - name: Merge output and sort
      shell: bash
      run: |
        mkdir -p "$(dirname "$LIST_FILE")"
        touch "$LIST_FILE"

        { head -n 2 "$LIST_FILE"; \
          cat nwss-output.txt;    \
          tail -n +3 "$LIST_FILE"; } > merged.tmp
        mv merged.tmp "$LIST_FILE"

        python3 FOP-nocommit.py easylist

    # 6 – commit if changed
    - name: Commit changes
      run: |
        if git diff --quiet "$LIST_FILE"; then
          echo "No changes – skipping commit"; exit 0; fi
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add "$LIST_FILE"
        git commit -m "chore: update easylist_adservers.txt (nwss cron)"
        git push

